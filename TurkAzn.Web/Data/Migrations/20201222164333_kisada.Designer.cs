// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurkAzn.Web.Data;

namespace TurkAzn.Web.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201222164333_kisada")]
    partial class kisada
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("TurkAzn.Data.Bildirim", b =>
                {
                    b.Property<int>("BildirimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BildirimIcerik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BildirimYollayan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("bildirimGorulmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("bildirimLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("bildirimZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("okunduMu")
                        .HasColumnType("bit");

                    b.HasKey("BildirimID");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Bildirim");
                });

            modelBuilder.Entity("TurkAzn.Data.Blog", b =>
                {
                    b.Property<int>("BlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aglayanlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Begenenler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Begenmeyenler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BlogResimResimID")
                        .HasColumnType("int");

                    b.Property<string>("BlogYazisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Etiketler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gulenler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KalpAtanlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MutluOlanlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OkumaDakikasi")
                        .HasColumnType("int");

                    b.Property<string>("Sinirlenenler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WowDiyenler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YaziKisaAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YazilmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("linkBaslik")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogID");

                    b.HasIndex("BlogResimResimID");

                    b.ToTable("BlogYazilari");
                });

            modelBuilder.Entity("TurkAzn.Data.BlogYorum", b =>
                {
                    b.Property<int>("BlogYorumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aglayanlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AltYorumBlogYorumID")
                        .HasColumnType("int");

                    b.Property<string>("Begenenler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Begenmeyenler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BlogID")
                        .HasColumnType("int");

                    b.Property<string>("Gulenler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KalpAtanlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MutluOlanlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sinirlenenler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WowDiyenler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YorumDegistirilme")
                        .HasColumnType("datetime2");

                    b.Property<bool>("YorumSilindimi")
                        .HasColumnType("bit");

                    b.Property<string>("YorumYapanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YorumYazilma")
                        .HasColumnType("datetime2");

                    b.Property<string>("YorumunIcerigi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogYorumID");

                    b.HasIndex("AltYorumBlogYorumID");

                    b.HasIndex("BlogID");

                    b.ToTable("BlogYorumlar");
                });

            modelBuilder.Entity("TurkAzn.Data.Destek", b =>
                {
                    b.Property<int>("DestekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AcilmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestekTalebiAcanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("KapanmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Konu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SonGuncelleme")
                        .HasColumnType("datetime2");

                    b.Property<bool>("kapandimi")
                        .HasColumnType("bit");

                    b.HasKey("DestekID");

                    b.HasIndex("DestekTalebiAcanId");

                    b.ToTable("DestekTalepleri");
                });

            modelBuilder.Entity("TurkAzn.Data.Durum", b =>
                {
                    b.Property<int>("DurumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DestekID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DurumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SatisID")
                        .HasColumnType("int");

                    b.Property<string>("durumIcerik")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DurumID");

                    b.HasIndex("DestekID");

                    b.HasIndex("SatisID");

                    b.ToTable("Durumlar");
                });

            modelBuilder.Entity("TurkAzn.Data.Izin", b =>
                {
                    b.Property<int>("IzinID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("IzinAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RolId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IzinID");

                    b.HasIndex("RolId");

                    b.ToTable("Izinler");
                });

            modelBuilder.Entity("TurkAzn.Data.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AnaKategoriMi")
                        .HasColumnType("bit");

                    b.Property<string>("KategoriAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KategoriAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KategoriID1")
                        .HasColumnType("int");

                    b.Property<string>("KategoriSimgesi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kisaad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriID");

                    b.HasIndex("KategoriID1");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("TurkAzn.Data.KimeMesajYollandi", b =>
                {
                    b.Property<int>("KimeMesajYollandiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("KullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("KimeMesajYollandiID");

                    b.HasIndex("KullaniciId");

                    b.ToTable("MesajAraTablo");
                });

            modelBuilder.Entity("TurkAzn.Data.Market", b =>
                {
                    b.Property<string>("MarketID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Begeni")
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int?>("LogoResimID")
                        .HasColumnType("int");

                    b.Property<string>("MarketTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OneCikanMarket")
                        .HasColumnType("bit");

                    b.Property<string>("ParaTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubMerchantKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TCKIMLIKNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VergiDairesi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VergiNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kisaAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("legalCompanyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarketID");

                    b.HasIndex("KategoriID");

                    b.HasIndex("LogoResimID");

                    b.ToTable("Marketler");
                });

            modelBuilder.Entity("TurkAzn.Data.Mesaj", b =>
                {
                    b.Property<int>("MesajID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Alan_KullaniciId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MesajGovde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OkunduMu")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OkunmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TelefonNumarasiIceriyor")
                        .HasColumnType("bit");

                    b.Property<int>("UstMesajID")
                        .HasColumnType("int");

                    b.Property<DateTime>("YollanmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Yollayan_KullaniciId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MesajID");

                    b.HasIndex("Alan_KullaniciId");

                    b.HasIndex("Yollayan_KullaniciId");

                    b.ToTable("Mesajlar");
                });

            modelBuilder.Entity("TurkAzn.Data.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("MessageText")
                        .HasMaxLength(144)
                        .HasColumnType("nvarchar(144)");

                    b.Property<DateTime>("MesssageDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MessageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("TurkAzn.Data.Reklam", b =>
                {
                    b.Property<int>("ReklamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("KategoriID")
                        .HasColumnType("int");

                    b.Property<string>("KucukReklamResimYolu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReklamAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReklamResimYolu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReklamID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Reklam");
                });

            modelBuilder.Entity("TurkAzn.Data.Resim", b =>
                {
                    b.Property<int>("ResimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("KucukResimYolu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResimAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResimYolu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UrunID")
                        .HasColumnType("int");

                    b.HasKey("ResimID");

                    b.HasIndex("UrunID");

                    b.ToTable("Resimler");
                });

            modelBuilder.Entity("TurkAzn.Data.Satis", b =>
                {
                    b.Property<int>("SatisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Alan_KullaniciId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AlinmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Onaylandimi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OnaylanmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Satan_MarketMarketID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SatilanUrunUrunID")
                        .HasColumnType("int");

                    b.Property<bool>("iadeEdildimi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("iptalTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("istek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iyzicoToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("odendiMi")
                        .HasColumnType("bit");

                    b.Property<decimal>("odenenPara")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SatisID");

                    b.HasIndex("Alan_KullaniciId");

                    b.HasIndex("Satan_MarketMarketID");

                    b.HasIndex("SatilanUrunUrunID");

                    b.ToTable("Satislar");
                });

            modelBuilder.Entity("TurkAzn.Data.SiteAyari", b =>
                {
                    b.Property<int>("SiteAyariID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("IyzicoApiKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IyzicoApiSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IyzicoBaseURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("komisyon")
                        .HasColumnType("int");

                    b.HasKey("SiteAyariID");

                    b.ToTable("SiteAyari");
                });

            modelBuilder.Entity("TurkAzn.Data.Urun", b =>
                {
                    b.Property<int>("UrunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BegeniNumarasi")
                        .HasColumnType("int");

                    b.Property<string>("KategoriAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KategoriID")
                        .HasColumnType("int");

                    b.Property<string>("MarketID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("OneCikarilan")
                        .HasColumnType("bit");

                    b.Property<int>("SatilmaSayisi")
                        .HasColumnType("int");

                    b.Property<string>("UrunAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UrunAktifmi")
                        .HasColumnType("bit");

                    b.Property<string>("UrunBaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UrunDegismeZamani")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UrunFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UrunSahibiId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UrunYaratilmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Urunkisaad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kisaTanitim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrunID");

                    b.HasIndex("KategoriID");

                    b.HasIndex("MarketID");

                    b.HasIndex("UrunSahibiId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("TurkAzn.Data.Yorum", b =>
                {
                    b.Property<int>("YorumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AltCevapYorumID")
                        .HasColumnType("int");

                    b.Property<string>("MarketID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UrunID")
                        .HasColumnType("int");

                    b.Property<int>("VerilenPuan")
                        .HasColumnType("int");

                    b.Property<DateTime>("YorumDegistirilme")
                        .HasColumnType("datetime2");

                    b.Property<bool>("YorumSilindimi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("YorumYazilma")
                        .HasColumnType("datetime2");

                    b.Property<string>("YorumuYazanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("YorumunIcerigi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YorumID");

                    b.HasIndex("AltCevapYorumID");

                    b.HasIndex("MarketID");

                    b.HasIndex("UrunID");

                    b.HasIndex("YorumuYazanId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("TurkAzn.Data.Kimlik.Rol", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Rol_AD")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Rol");
                });

            modelBuilder.Entity("TurkAzn.Data.Kimlik.Kullanici", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("AktifOlmamaNedeni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AvatarResimID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EnSonOturumAcma")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MarketHesabimi")
                        .HasColumnType("bit");

                    b.Property<string>("MarketProfiliMarketID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon_Numarasi")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("AvatarResimID");

                    b.HasIndex("MarketProfiliMarketID");

                    b.HasDiscriminator().HasValue("Kullanici");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TurkAzn.Data.Bildirim", b =>
                {
                    b.HasOne("TurkAzn.Data.Kimlik.Kullanici", null)
                        .WithMany("kullanicininBildirimleri")
                        .HasForeignKey("KullaniciId");
                });

            modelBuilder.Entity("TurkAzn.Data.Blog", b =>
                {
                    b.HasOne("TurkAzn.Data.Resim", "BlogResim")
                        .WithMany()
                        .HasForeignKey("BlogResimResimID");

                    b.Navigation("BlogResim");
                });

            modelBuilder.Entity("TurkAzn.Data.BlogYorum", b =>
                {
                    b.HasOne("TurkAzn.Data.BlogYorum", "AltYorum")
                        .WithMany()
                        .HasForeignKey("AltYorumBlogYorumID");

                    b.HasOne("TurkAzn.Data.Blog", null)
                        .WithMany("BlogYorumlari")
                        .HasForeignKey("BlogID");

                    b.Navigation("AltYorum");
                });

            modelBuilder.Entity("TurkAzn.Data.Destek", b =>
                {
                    b.HasOne("TurkAzn.Data.Kimlik.Kullanici", "DestekTalebiAcan")
                        .WithMany()
                        .HasForeignKey("DestekTalebiAcanId");

                    b.Navigation("DestekTalebiAcan");
                });

            modelBuilder.Entity("TurkAzn.Data.Durum", b =>
                {
                    b.HasOne("TurkAzn.Data.Destek", null)
                        .WithMany("DestekDurum")
                        .HasForeignKey("DestekID");

                    b.HasOne("TurkAzn.Data.Satis", null)
                        .WithMany("SatisDurumu")
                        .HasForeignKey("SatisID");
                });

            modelBuilder.Entity("TurkAzn.Data.Izin", b =>
                {
                    b.HasOne("TurkAzn.Data.Kimlik.Rol", null)
                        .WithMany("Izinler")
                        .HasForeignKey("RolId");
                });

            modelBuilder.Entity("TurkAzn.Data.Kategori", b =>
                {
                    b.HasOne("TurkAzn.Data.Kategori", null)
                        .WithMany("KategorininAlt")
                        .HasForeignKey("KategoriID1");
                });

            modelBuilder.Entity("TurkAzn.Data.KimeMesajYollandi", b =>
                {
                    b.HasOne("TurkAzn.Data.Kimlik.Kullanici", null)
                        .WithMany("Mesajlar")
                        .HasForeignKey("KullaniciId");
                });

            modelBuilder.Entity("TurkAzn.Data.Market", b =>
                {
                    b.HasOne("TurkAzn.Data.Kategori", null)
                        .WithMany("OneCikanMarka")
                        .HasForeignKey("KategoriID");

                    b.HasOne("TurkAzn.Data.Resim", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoResimID");

                    b.Navigation("Logo");
                });

            modelBuilder.Entity("TurkAzn.Data.Mesaj", b =>
                {
                    b.HasOne("TurkAzn.Data.Kimlik.Kullanici", "Alan_Kullanici")
                        .WithMany()
                        .HasForeignKey("Alan_KullaniciId");

                    b.HasOne("TurkAzn.Data.Kimlik.Kullanici", "Yollayan_Kullanici")
                        .WithMany()
                        .HasForeignKey("Yollayan_KullaniciId");

                    b.Navigation("Alan_Kullanici");

                    b.Navigation("Yollayan_Kullanici");
                });

            modelBuilder.Entity("TurkAzn.Data.Reklam", b =>
                {
                    b.HasOne("TurkAzn.Data.Kategori", null)
                        .WithMany("KategoriReklami")
                        .HasForeignKey("KategoriID");
                });

            modelBuilder.Entity("TurkAzn.Data.Resim", b =>
                {
                    b.HasOne("TurkAzn.Data.Urun", null)
                        .WithMany("UrunResimleri")
                        .HasForeignKey("UrunID");
                });

            modelBuilder.Entity("TurkAzn.Data.Satis", b =>
                {
                    b.HasOne("TurkAzn.Data.Kimlik.Kullanici", "Alan_Kullanici")
                        .WithMany()
                        .HasForeignKey("Alan_KullaniciId");

                    b.HasOne("TurkAzn.Data.Market", "Satan_Market")
                        .WithMany()
                        .HasForeignKey("Satan_MarketMarketID");

                    b.HasOne("TurkAzn.Data.Urun", "SatilanUrun")
                        .WithMany()
                        .HasForeignKey("SatilanUrunUrunID");

                    b.Navigation("Alan_Kullanici");

                    b.Navigation("Satan_Market");

                    b.Navigation("SatilanUrun");
                });

            modelBuilder.Entity("TurkAzn.Data.Urun", b =>
                {
                    b.HasOne("TurkAzn.Data.Kategori", null)
                        .WithMany("kategoridekiUrunler")
                        .HasForeignKey("KategoriID");

                    b.HasOne("TurkAzn.Data.Market", null)
                        .WithMany("Urunler")
                        .HasForeignKey("MarketID");

                    b.HasOne("TurkAzn.Data.Kimlik.Kullanici", "UrunSahibi")
                        .WithMany()
                        .HasForeignKey("UrunSahibiId");

                    b.Navigation("UrunSahibi");
                });

            modelBuilder.Entity("TurkAzn.Data.Yorum", b =>
                {
                    b.HasOne("TurkAzn.Data.Yorum", "AltCevap")
                        .WithMany()
                        .HasForeignKey("AltCevapYorumID");

                    b.HasOne("TurkAzn.Data.Market", null)
                        .WithMany("AldigiYorumlar")
                        .HasForeignKey("MarketID");

                    b.HasOne("TurkAzn.Data.Urun", null)
                        .WithMany("UrunYorumlari")
                        .HasForeignKey("UrunID");

                    b.HasOne("TurkAzn.Data.Kimlik.Kullanici", "YorumuYazan")
                        .WithMany()
                        .HasForeignKey("YorumuYazanId");

                    b.Navigation("AltCevap");

                    b.Navigation("YorumuYazan");
                });

            modelBuilder.Entity("TurkAzn.Data.Kimlik.Kullanici", b =>
                {
                    b.HasOne("TurkAzn.Data.Resim", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarResimID");

                    b.HasOne("TurkAzn.Data.Market", "MarketProfili")
                        .WithMany()
                        .HasForeignKey("MarketProfiliMarketID");

                    b.Navigation("Avatar");

                    b.Navigation("MarketProfili");
                });

            modelBuilder.Entity("TurkAzn.Data.Blog", b =>
                {
                    b.Navigation("BlogYorumlari");
                });

            modelBuilder.Entity("TurkAzn.Data.Destek", b =>
                {
                    b.Navigation("DestekDurum");
                });

            modelBuilder.Entity("TurkAzn.Data.Kategori", b =>
                {
                    b.Navigation("kategoridekiUrunler");

                    b.Navigation("KategorininAlt");

                    b.Navigation("KategoriReklami");

                    b.Navigation("OneCikanMarka");
                });

            modelBuilder.Entity("TurkAzn.Data.Market", b =>
                {
                    b.Navigation("AldigiYorumlar");

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("TurkAzn.Data.Satis", b =>
                {
                    b.Navigation("SatisDurumu");
                });

            modelBuilder.Entity("TurkAzn.Data.Urun", b =>
                {
                    b.Navigation("UrunResimleri");

                    b.Navigation("UrunYorumlari");
                });

            modelBuilder.Entity("TurkAzn.Data.Kimlik.Rol", b =>
                {
                    b.Navigation("Izinler");
                });

            modelBuilder.Entity("TurkAzn.Data.Kimlik.Kullanici", b =>
                {
                    b.Navigation("kullanicininBildirimleri");

                    b.Navigation("Mesajlar");
                });
#pragma warning restore 612, 618
        }
    }
}
